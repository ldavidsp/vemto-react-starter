<?php
<% let modelName = this.model.modelName.case('pascalCase') %>
<% let modelNamePascalCase = this.model.modelName %>
<% let modelPluralCamelCase = this.model.routes %>
<% let pagesPrefix = this.model.routes %>
<% let routesPrefix = this.model.routes %>

namespace App\Http\Controllers\<$ this.model.routes.case('pascalCase') $>;

use App\Http\Controllers\Controller;
use App\Http\Controllers\<$ this.model.routes.case('pascalCase') $>\Requests\<$ modelName $>StoreRequest;
use App\Http\Controllers\<$ this.model.routes.case('pascalCase') $>\Requests\<$ modelName $>UpdateRequest;
use App\Models\<$ modelName $>;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Inertia\Inertia;
use Inertia\Response;

class <$ modelName $>Controller extends Controller {

  public function index(Request $request): Response {
    $this->authorize('view-any', <$ modelName $>::class);
    $name = $request->name ?? '';
    $<$ modelPluralCamelCase $> = <$ modelName $>::when($request->name, function ($query, $name) {
      return $query->where('name', 'ilike', "%$name%");
    })->paginate(20);

    return Inertia::render('authenticated/<$ pagesPrefix $>/index', [
      '<$ modelPluralCamelCase $>' => $<$ modelPluralCamelCase $>,
      'name' => $name
    ]);
  }

  public function create(Request $request): Response {
    $this->authorize('create', <$ modelName $>::class);
    return Inertia::render('authenticated/<$ pagesPrefix $>/create');
  }

  public function store(<$ modelName $>StoreRequest $request): RedirectResponse {
    $this->authorize('create', <$ modelName $>::class);
    $validated = $request->validated();
    <$ modelName $>::create($validated);

    return redirect()->route('<$ routesPrefix $>.index');
  }

  public function show(Request $request, <$ modelName $> $<$ modelNamePascalCase $>): Response {
    $this->authorize('view', $<$ modelNamePascalCase $>);
    return Inertia::render('authenticated/<$ pagesPrefix $>/show', [
      '<$ modelNamePascalCase $>' => $<$ modelNamePascalCase $>
    ]);
  }

  public function edit(Request $request, <$ modelName $> $<$ modelNamePascalCase $>): Response {
    $this->authorize('update', $<$ modelNamePascalCase $>);
    return Inertia::render('authenticated/<$ pagesPrefix $>/edit', [
      '<$ modelNamePascalCase $>' => $<$ modelNamePascalCase $>
    ]);
  }

  public function update(<$ modelName $>UpdateRequest $request, <$ modelName $> $<$ modelNamePascalCase $>): RedirectResponse {
    $this->authorize('update', $<$ modelNamePascalCase $>);
    $validated = $request->validated();
    $<$ modelNamePascalCase $>->update($validated);

    return redirect()->route('<$ routesPrefix $>.index');
  }

  public function destroy(Request $request, <$ modelName $> $<$ modelNamePascalCase $>): RedirectResponse {
    $this->authorize('delete', $<$ modelNamePascalCase $>);
    $<$ modelNamePascalCase $>->delete();

    return redirect()->route('<$ routesPrefix $>.index');
  }
}
